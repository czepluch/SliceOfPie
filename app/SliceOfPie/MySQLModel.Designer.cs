//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("sliceofpieModel", "d_folderId", "folder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.Folder), "document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.Document), true)]
[assembly: EdmRelationshipAttribute("sliceofpieModel", "d_projectId", "project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.Project), "document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.Document), true)]
[assembly: EdmRelationshipAttribute("sliceofpieModel", "r_documentId", "document", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.Document), "revision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.Revision), true)]
[assembly: EdmRelationshipAttribute("sliceofpieModel", "f_folderId", "folder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.Folder), "folder1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.Folder), true)]
[assembly: EdmRelationshipAttribute("sliceofpieModel", "f_projectId", "project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.Project), "folder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.Folder), true)]
[assembly: EdmRelationshipAttribute("sliceofpieModel", "pu_projectId", "project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.Project), "project_users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("sliceofpieModel", "pu_userId", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SliceOfPie.User), "project_users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SliceOfPie.ProjectUser), true)]

#endregion

namespace SliceOfPie
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class sliceofpieEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new sliceofpieEntities object using the connection string found in the 'sliceofpieEntities' section of the application configuration file.
        /// </summary>
        public sliceofpieEntities() : base("name=sliceofpieEntities", "sliceofpieEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new sliceofpieEntities object.
        /// </summary>
        public sliceofpieEntities(string connectionString) : base(connectionString, "sliceofpieEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new sliceofpieEntities object.
        /// </summary>
        public sliceofpieEntities(EntityConnection connection) : base(connection, "sliceofpieEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents1
        {
            get
            {
                if ((_Documents1 == null))
                {
                    _Documents1 = base.CreateObjectSet<Document>("Documents1");
                }
                return _Documents1;
            }
        }
        private ObjectSet<Document> _Documents1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder> Folders1
        {
            get
            {
                if ((_Folders1 == null))
                {
                    _Folders1 = base.CreateObjectSet<Folder>("Folders1");
                }
                return _Folders1;
            }
        }
        private ObjectSet<Folder> _Folders1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects1
        {
            get
            {
                if ((_Projects1 == null))
                {
                    _Projects1 = base.CreateObjectSet<Project>("Projects1");
                }
                return _Projects1;
            }
        }
        private ObjectSet<Project> _Projects1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUser> ProjectUsers1
        {
            get
            {
                if ((_ProjectUsers1 == null))
                {
                    _ProjectUsers1 = base.CreateObjectSet<ProjectUser>("ProjectUsers1");
                }
                return _ProjectUsers1;
            }
        }
        private ObjectSet<ProjectUser> _ProjectUsers1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Revision> Revisions1
        {
            get
            {
                if ((_Revisions1 == null))
                {
                    _Revisions1 = base.CreateObjectSet<Revision>("Revisions1");
                }
                return _Revisions1;
            }
        }
        private ObjectSet<Revision> _Revisions1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users1
        {
            get
            {
                if ((_Users1 == null))
                {
                    _Users1 = base.CreateObjectSet<User>("Users1");
                }
                return _Users1;
            }
        }
        private ObjectSet<User> _Users1;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments1(Document document)
        {
            base.AddObject("Documents1", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folders1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolders1(Folder folder)
        {
            base.AddObject("Folders1", folder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects1(Project project)
        {
            base.AddObject("Projects1", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUsers1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUsers1(ProjectUser projectUser)
        {
            base.AddObject("ProjectUsers1", projectUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Revisions1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRevisions1(Revision revision)
        {
            base.AddObject("Revisions1", revision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers1(User user)
        {
            base.AddObject("Users1", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sliceofpieModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Document CreateDocument(global::System.Int32 id)
        {
            Document document = new Document();
            document.id = id;
            return document;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> folderId
        {
            get
            {
                return _folderId;
            }
            set
            {
                OnfolderIdChanging(value);
                ReportPropertyChanging("folderId");
                _folderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("folderId");
                OnfolderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _folderId;
        partial void OnfolderIdChanging(Nullable<global::System.Int32> value);
        partial void OnfolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> projectId
        {
            get
            {
                return _projectId;
            }
            set
            {
                OnprojectIdChanging(value);
                ReportPropertyChanging("projectId");
                _projectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("projectId");
                OnprojectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _projectId;
        partial void OnprojectIdChanging(Nullable<global::System.Int32> value);
        partial void OnprojectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "d_folderId", "folder")]
        public Folder folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("sliceofpieModel.d_folderId", "folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("sliceofpieModel.d_folderId", "folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> folderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("sliceofpieModel.d_folderId", "folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("sliceofpieModel.d_folderId", "folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "d_projectId", "project")]
        public Project project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.d_projectId", "project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.d_projectId", "project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> projectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.d_projectId", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("sliceofpieModel.d_projectId", "project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "r_documentId", "revision")]
        public EntityCollection<Revision> revisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Revision>("sliceofpieModel.r_documentId", "revision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Revision>("sliceofpieModel.r_documentId", "revision", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sliceofpieModel", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Folder CreateFolder(global::System.Int32 id)
        {
            Folder folder = new Folder();
            folder.id = id;
            return folder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> folderId
        {
            get
            {
                return _folderId;
            }
            set
            {
                OnfolderIdChanging(value);
                ReportPropertyChanging("folderId");
                _folderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("folderId");
                OnfolderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _folderId;
        partial void OnfolderIdChanging(Nullable<global::System.Int32> value);
        partial void OnfolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> projectId
        {
            get
            {
                return _projectId;
            }
            set
            {
                OnprojectIdChanging(value);
                ReportPropertyChanging("projectId");
                _projectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("projectId");
                OnprojectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _projectId;
        partial void OnprojectIdChanging(Nullable<global::System.Int32> value);
        partial void OnprojectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "d_folderId", "document")]
        public EntityCollection<Document> documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("sliceofpieModel.d_folderId", "document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("sliceofpieModel.d_folderId", "document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "f_folderId", "folder1")]
        public EntityCollection<Folder> folder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("sliceofpieModel.f_folderId", "folder1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("sliceofpieModel.f_folderId", "folder1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "f_folderId", "folder")]
        public Folder folder2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("sliceofpieModel.f_folderId", "folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("sliceofpieModel.f_folderId", "folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> folder2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("sliceofpieModel.f_folderId", "folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("sliceofpieModel.f_folderId", "folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "f_projectId", "project")]
        public Project project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.f_projectId", "project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.f_projectId", "project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> projectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.f_projectId", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("sliceofpieModel.f_projectId", "project", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sliceofpieModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Project CreateProject(global::System.Int32 id)
        {
            Project project = new Project();
            project.id = id;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "d_projectId", "document")]
        public EntityCollection<Document> documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("sliceofpieModel.d_projectId", "document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("sliceofpieModel.d_projectId", "document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "f_projectId", "folder")]
        public EntityCollection<Folder> folders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("sliceofpieModel.f_projectId", "folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("sliceofpieModel.f_projectId", "folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "pu_projectId", "project_users")]
        public EntityCollection<ProjectUser> project_users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("sliceofpieModel.pu_projectId", "project_users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("sliceofpieModel.pu_projectId", "project_users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sliceofpieModel", Name="ProjectUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUser object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ProjectUser CreateProjectUser(global::System.Int32 id)
        {
            ProjectUser projectUser = new ProjectUser();
            projectUser.id = id;
            return projectUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> projectId
        {
            get
            {
                return _projectId;
            }
            set
            {
                OnprojectIdChanging(value);
                ReportPropertyChanging("projectId");
                _projectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("projectId");
                OnprojectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _projectId;
        partial void OnprojectIdChanging(Nullable<global::System.Int32> value);
        partial void OnprojectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _userId;
        partial void OnuserIdChanging(Nullable<global::System.Int32> value);
        partial void OnuserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "pu_projectId", "project")]
        public Project project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.pu_projectId", "project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.pu_projectId", "project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> projectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("sliceofpieModel.pu_projectId", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("sliceofpieModel.pu_projectId", "project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "pu_userId", "user")]
        public User user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sliceofpieModel.pu_userId", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sliceofpieModel.pu_userId", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sliceofpieModel.pu_userId", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("sliceofpieModel.pu_userId", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sliceofpieModel", Name="Revision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Revision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Revision object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Revision CreateRevision(global::System.Int32 id)
        {
            Revision revision = new Revision();
            revision.id = id;
            return revision;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String content
        {
            get
            {
                return _content;
            }
            set
            {
                OncontentChanging(value);
                ReportPropertyChanging("content");
                _content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("content");
                OncontentChanged();
            }
        }
        private global::System.String _content;
        partial void OncontentChanging(global::System.String value);
        partial void OncontentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> contentHash
        {
            get
            {
                return _contentHash;
            }
            set
            {
                OncontentHashChanging(value);
                ReportPropertyChanging("contentHash");
                _contentHash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contentHash");
                OncontentHashChanged();
            }
        }
        private Nullable<global::System.Int32> _contentHash;
        partial void OncontentHashChanging(Nullable<global::System.Int32> value);
        partial void OncontentHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> documentId
        {
            get
            {
                return _documentId;
            }
            set
            {
                OndocumentIdChanging(value);
                ReportPropertyChanging("documentId");
                _documentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("documentId");
                OndocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _documentId;
        partial void OndocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OndocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "r_documentId", "document")]
        public Document document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("sliceofpieModel.r_documentId", "document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("sliceofpieModel.r_documentId", "document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> documentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("sliceofpieModel.r_documentId", "document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("sliceofpieModel.r_documentId", "document", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sliceofpieModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.id = id;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sliceofpieModel", "pu_userId", "project_users")]
        public EntityCollection<ProjectUser> project_users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("sliceofpieModel.pu_userId", "project_users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("sliceofpieModel.pu_userId", "project_users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
